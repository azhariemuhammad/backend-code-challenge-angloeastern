// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShipManagement.Data;

#nullable disable

namespace ShipManagement.Migrations
{
    [DbContext(typeof(ShipManagementContext))]
    [Migration("20250725093906_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShipManagement.Models.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("numeric(11,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("numeric(11,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Netherlands",
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(890),
                            Latitude = 51.92250000m,
                            Longitude = 4.47917000m,
                            Name = "Port of Rotterdam"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Singapore",
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(1020),
                            Latitude = 1.29660000m,
                            Longitude = 3.80610000m,
                            Name = "Port of Singapore"
                        },
                        new
                        {
                            Id = 3,
                            Country = "United States",
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(1030),
                            Latitude = 33.73650000m,
                            Longitude = -18.29230000m,
                            Name = "Port of Los Angeles"
                        });
                });

            modelBuilder.Entity("ShipManagement.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("numeric(11,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("numeric(11,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Velocity")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShipCode")
                        .IsUnique();

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6060),
                            Latitude = 1.3521m,
                            Longitude = 103.8198m,
                            Name = "Aurora",
                            ShipCode = "AE-001",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6170),
                            Velocity = 22.5m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6290),
                            Latitude = 35.6895m,
                            Longitude = 139.6917m,
                            Name = "Endeavour",
                            ShipCode = "AE-002",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6290),
                            Velocity = 18.7m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6290),
                            Latitude = 51.5074m,
                            Longitude = -0.1278m,
                            Name = "Odyssey",
                            ShipCode = "AE-003",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(6290),
                            Velocity = 25.0m
                        });
                });

            modelBuilder.Entity("ShipManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4680),
                            Name = "Alice",
                            Role = "Admin",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4800)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4920),
                            Name = "Bob",
                            Role = "Operator",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4920)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4930),
                            Name = "Charlie",
                            Role = "Manager",
                            UpdatedAt = new DateTime(2025, 7, 25, 9, 39, 6, 171, DateTimeKind.Utc).AddTicks(4930)
                        });
                });

            modelBuilder.Entity("ShipUser", b =>
                {
                    b.Property<int>("ShipsId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersId")
                        .HasColumnType("integer");

                    b.HasKey("ShipsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ShipUser");
                });

            modelBuilder.Entity("ShipUser", b =>
                {
                    b.HasOne("ShipManagement.Models.Ship", null)
                        .WithMany()
                        .HasForeignKey("ShipsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShipManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
